package {{package}};

{{#imports}}
import {{.}};
{{/imports}}
import {{repositoryPackage}}.{{name}}Repository;
import {{queryPackage}}.FindBy{{field.nameCapitalized}}{{name}}Query;
import {{dtoPackage}}.{{name}}Response;
import lombok.RequiredArgsConstructor;
import org.axonframework.queryhandling.QueryHandler;
import org.springframework.stereotype.Component;
import java.util.concurrent.CompletableFuture;
import java.util.List;

@Component
public class FindBy{{field.nameCapitalized}}{{name}}Handler {

private final {{name}}Repository repository;

public FindById{{name}}Handler({{name}}Repository repository) {
	this.repository = repository;
}

@QueryHandler
public CompletableFuture<List<{{name}}Response>> handle(FindBy{{field.nameCapitalized}}{{name}}Query query) {
		return repository
		.getBy{{field.nameCapitalized}}(query.get{{field.nameCapitalized}}().value())
		.map({{name}}Mapper::toResponse)
		.collectList()
		.toFuture();

	}
}
