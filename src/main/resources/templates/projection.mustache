package {{package}};

{{#imports}}
import {{.}};
{{/imports}}

import org.axonframework.eventhandling.EventHandler;
import org.springframework.stereotype.Component;
import reactor.core.publisher.Mono;

@Component
public class {{name}}Projection {

private final {{name}}Repository repository;

public {{name}}Projection({{name}}Repository repository) {
this.repository = repository;
}

@EventHandler
public Mono<Void> on({{name}}CreatedEvent event) {
	return repository.insert(
	{{#fields}}            event.get{{nameCapitalized}}().value(){{^last}},{{/last}}
	{{/fields}}
	).then();
	}

	@EventHandler
	public Mono<Void> on({{name}}UpdatedEvent event) {
		return repository.updateAllById(
		{{#fields}}        event.get{{nameCapitalized}}().value(){{^last}},{{/last}}
		{{/fields}}
		).then();
	}


		@EventHandler
	public Mono<Void> on({{name}}DeletedEvent event) {
		return repository.deleteById(event.getId().value()).then();
		}
}
